const { Telegraf, Markup } = require('telegraf');
require('dotenv').config();

const bot = new Telegraf(process.env.BOT_TOKEN);
const ADMIN_ID = process.env.ADMIN_ID; // –í–∞—à Telegram ID

// –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
const adminMenu = Markup.keyboard([['–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Äüõí']]).resize();

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞
const adminMenuWithPublishProduct = Markup.keyboard([
  ['–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Äüõí', '–ü—Ä–µ–¥–æ—Å–º–æ—Ç—Ä –ø—É–±–ª–∏–∫–∞—Ü–∏–∏'],
  ['–û—Ç–º–µ–Ω–∏—Ç—å'],
])
  .resize()
  .oneTime();

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–û—Ç–º–µ–Ω–∏—Ç—å"
const adminMenuWithCancel = Markup.keyboard([['–û—Ç–º–µ–Ω–∏—Ç—å']])
  .resize()
  .oneTime();

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞
let pendingPost = { photos: [], description: null, state: 'awaiting_photo' };
let currentAction = null;

// –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
bot.start(ctx => {
  if (ctx.from.id.toString() === ADMIN_ID) {
    ctx.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é.', adminMenu);
  } else {
    ctx.reply('–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ (–ø–æ –æ–¥–Ω–æ–º—É)
bot.on('photo', async ctx => {
  if (ctx.from.id.toString() !== ADMIN_ID) return;

  if (
    currentAction === 'publishing_product' &&
    pendingPost.state === 'awaiting_photo'
  ) {
    const photo = ctx.message.photo.pop();
    pendingPost.photos.push(photo.file_id);

    await ctx.reply(
      '–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ! –ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞.',
      adminMenuWithCancel
    );
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–ª—å–±–æ–º–∞ (–Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ —Å—Ä–∞–∑—É)
bot.on('media_group', async ctx => {
  if (ctx.from.id.toString() !== ADMIN_ID) return;

  if (
    currentAction === 'publishing_product' &&
    pendingPost.state === 'awaiting_photo'
  ) {
    ctx.message.photo.forEach(p => pendingPost.photos.push(p.file_id));
    await ctx.reply(
      '–ê–ª—å–±–æ–º –ø–æ–ª—É—á–µ–Ω! –ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë —Ñ–æ—Ç–æ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞.',
      adminMenuWithCancel
    );
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
bot.on('text', async ctx => {
  if (ctx.from.id.toString() !== ADMIN_ID) return;
  const text = ctx.message.text;

  // –û—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è
  if (text === '–û—Ç–º–µ–Ω–∏—Ç—å') {
    pendingPost = { photos: [], description: null, state: 'awaiting_photo' };
    currentAction = null;
    await ctx.reply('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.', adminMenu);
    return;
  }

  // –ù–∞—á–∞–ª–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞
  if (text === '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Äüõí') {
    currentAction = 'publishing_product';

    if (pendingPost.state === 'awaiting_photo') {
      await ctx.reply('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞.', adminMenuWithCancel);
    } else if (pendingPost.state === 'ready_to_publish') {
      // –ü—É–±–ª–∏–∫–∞—Ü–∏—è
      const mediaGroup = pendingPost.photos.map((fileId, index) => ({
        type: 'photo',
        media: fileId,
        caption:
          index === 0
            ? `‚ú®üÖΩüÖ¥üÜÜ‚ú®\n---------------------------------\nüõçÔ∏è ${
                pendingPost.description || '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.'
              }\n---------------------------------`
            : undefined,
        parse_mode: index === 0 ? 'HTML' : undefined,
      }));

      try {
        await ctx.telegram.sendMediaGroup('@idealshoplnr', mediaGroup);

        pendingPost = {
          photos: [],
          description: null,
          state: 'awaiting_photo',
        };
        await ctx.reply('–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!', adminMenu);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞:', error);
        await ctx.reply('–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞.', adminMenu);
      }
    }
    return;
  }

  // –í–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
  if (
    currentAction === 'publishing_product' &&
    pendingPost.photos.length > 0 &&
    pendingPost.state === 'awaiting_photo'
  ) {
    pendingPost.description = text;
    pendingPost.state = 'ready_to_publish';

    await ctx.reply(
      '–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ "–ü—Ä–µ–¥–æ—Å–º–æ—Ç—Ä –ø—É–±–ª–∏–∫–∞—Ü–∏–∏" –∏–ª–∏ "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä".',
      adminMenuWithPublishProduct
    );
    return;
  }

  // –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
  if (
    text === '–ü—Ä–µ–¥–æ—Å–º–æ—Ç—Ä –ø—É–±–ª–∏–∫–∞—Ü–∏–∏' &&
    currentAction === 'publishing_product'
  ) {
    if (pendingPost.state === 'ready_to_publish') {
      const mediaGroup = pendingPost.photos.map((fileId, index) => ({
        type: 'photo',
        media: fileId,
        caption:
          index === 0
            ? `‚ú®üÖΩüÖ¥üÜÜ‚ú®\n---------------------------------\nüõçÔ∏è ${
                pendingPost.description || '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.'
              }\n---------------------------------`
            : undefined,
        parse_mode: index === 0 ? 'HTML' : undefined,
      }));

      await ctx.replyWithMediaGroup(mediaGroup);
      await ctx.reply(
        '–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≥–æ—Ç–æ–≤. –û–ø—É–±–ª–∏–∫—É–π—Ç–µ —Ç–æ–≤–∞—Ä –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ.',
        adminMenuWithPublishProduct
      );
    } else {
      await ctx.reply(
        '–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞.',
        adminMenuWithCancel
      );
    }
    return;
  }

  // –õ—é–±–æ–π –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç
  await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é.', adminMenu);
});

bot.launch();
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
